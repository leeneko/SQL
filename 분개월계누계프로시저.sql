DROP PROCEDURE APR_SAM_FAM0932;
CREATE PROCEDURE APR_SAM_FAM0932 (
	IN BPLID	NVARCHAR(5),
	IN FR_DT	NVARCHAR(10),
	IN TO_DT	NVARCHAR(10),
	IN CARDCODE	NVARCHAR(10)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
	SELECT
		V.REFDATE AS "전기일L000Y",
		V.TRANSID AS "원천 번호L000Y",
		V.MEMO AS "세부사항L000Y",
		CASE
			WHEN COALESCE(B1."CardCode", '') != ''
			THEN B1."CardCode"
			ELSE B2."CardCode"
		END AS "거래처코드L000Y",
		CASE
			WHEN COALESCE(B1."CardCode", '') != ''
			THEN B1."CardName"
			ELSE B2."CardName"
		END AS "거래처명L000Y",
		ADDCOMMA(CAST(V.DEBIT AS BIGINT)) AS "차변R000Y",
		ADDCOMMA(CAST(V.CREDIT AS BIGINT)) AS "대변R000Y",
		CASE
			WHEN V.ROWTYPE IN (0, 1)
			THEN ADDCOMMA(CAST(SUM(V.DEBIT - V.CREDIT) OVER (ORDER BY V.ROWNO) AS BIGINT))
			ELSE NULL
		END AS "잔액R000Y"
	FROM (
		SELECT
			0 AS ROWTYPE,
			'000000' AS YEARMM,
			0 AS ROWNO,
			NULL AS REFDATE,
			NULL AS ACCOUNT,
			NULL AS TRANSID,
			'[ 이    월 ]' AS MEMO,
			NULL AS SHORTNAME,
			NULL AS CONTRAACT,
			SUM(COALESCE(A."Debit", 0)) AS DEBIT,
			SUM(COALESCE(A."Credit", 0)) AS CREDIT,
			0
--			SUM(COALESCE(A."Debit", 0)) - SUM(COALESCE(A."Credit", 0)) AS BALANCE
		FROM JDT1 A
		WHERE A."Account" = :CARDCODE
		AND A."BPLId" = :BPLID
		AND A."RefDate" < :FR_DT
		
		UNION ALL
		
		SELECT
			1 AS ROWTYPE,
			TO_NVARCHAR(A."RefDate", 'YYYYMM'),
			RANK() OVER (ORDER BY A."RefDate", A."TransId", "Line_ID"),
			A."RefDate",
			A."Account",
			A."TransId",
			A."LineMemo",
			A."ShortName",
			A."ContraAct",
			COALESCE(A."Debit", 0),
			COALESCE(A."Credit", 0),
			0
--			COALESCE(A."Debit", 0) - COALESCE(A."Credit", 0)
		FROM JDT1 A
		WHERE A."Account" = :CARDCODE
		AND A."BPLId" = :BPLID
		AND A."RefDate" BETWEEN :FR_DT AND :TO_DT
		
		UNION ALL
		
		SELECT
			2 AS ROWTYPE,
			TO_NVARCHAR(A."RefDate", 'YYYYMM'),
			99998 AS ROWNO,
			NULL AS REFDATE,
			NULL AS ACCOUNT,
			NULL AS TRANSID,
			'[ 월    계 ]',
			NULL AS SHORTNAME,
			NULL AS CONTRAACT,
			SUM(COALESCE(A."Debit", 0)),
			SUM(COALESCE(A."Credit", 0)),
			NULL AS BALANCE
			--SUM(COALESCE(A."Debit", 0)) - SUM(COALESCE(A."Credit", 0)) AS BALANCE
		FROM JDT1 A
		WHERE A."Account" = :CARDCODE
		AND A."BPLId" = :BPLID
		AND A."RefDate" BETWEEN :FR_DT AND :TO_DT
		GROUP BY TO_NVARCHAR(A."RefDate", 'YYYYMM')
		
		UNION ALL
		
		SELECT
			3 AS ROWTYPE,
			A.YEARMM,
			99999 AS ROWNO,
			NULL AS REFDATE,
			NULL AS ACCOUNT,
			NULL AS TRANSID,
			'[ 누    계 ]' AS LINEMEMO,
			NULL AS SHORTNAME,
			NULL AS CONTRAACT,
			SUM(A.DEBIT) OVER (ORDER BY YEARMM) AS DEBIT,
			SUM(A.CREDIT) OVER (ORDER BY YEARMM) AS CREDIT,
			NULL AS BALANCE
		FROM (
			SELECT
				TO_NVARCHAR(A."RefDate", 'YYYYMM') AS YEARMM,
				SUM(A."Debit") AS DEBIT,
				SUM(A."Credit") AS CREDIT
			FROM JDT1 A
			WHERE A."Account" = :CARDCODE
			AND A."BPLId" = :BPLID
			AND A."RefDate" <= :TO_DT
			GROUP BY TO_NVARCHAR(A."RefDate", 'YYYYMM')
		) A
	) V
	LEFT JOIN OCRD B1 ON V.SHORTNAME = B1."CardCode"
	LEFT JOIN OCRD B2 ON V.CONTRAACT = B2."CardCode"
	WHERE (V.YEARMM = '000000' OR V.YEARMM BETWEEN TO_NVARCHAR(:FR_DT, 'YYYYMM') AND TO_NVARCHAR(:TO_DT, 'YYYYMM'))
	ORDER BY V.YEARMM, V.ROWTYPE, V.ROWNO;
END;
CALL APR_SAM_FAM0932('1', '20190201', '20190531', '40400');