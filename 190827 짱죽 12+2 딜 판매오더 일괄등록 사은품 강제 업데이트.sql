ALTER PROCEDURE APR_OEM0112_ItemCheck(
	IN	DocEntry	varchar(10)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
	DECLARE CARDCODE NVARCHAR(20);
	DECLARE ORDRNO NVARCHAR(20);
	DECLARE ITEMCODE1 NVARCHAR(20);
	DECLARE ITEMCODE2 NVARCHAR(20);
	DECLARE ITEMCODE3 NVARCHAR(20);
	DECLARE ITEMCODE4 NVARCHAR(20);
	DECLARE ITEMCODE5 NVARCHAR(20);
	DECLARE CHECKED NVARCHAR(1);
	DECLARE FINISHED NVARCHAR(1);
	DECLARE i INT := 1;
	DECLARE CNT INT; -- 주문자 수
	DECLARE BASEQTY INT; -- 덤이 발생하는 기본 수량
	DECLARE TEMP INT; -- 해당 주문자의 주문 수량
	DECLARE LINE_ID INT;
	
	SELECT
		A."Code"
	INTO CARDCODE
	FROM "@APR_EVENT" A
	INNER JOIN "@APR_SHOPM1" B ON A."Code" = B."U_CARDCODE"
	INNER JOIN "@APR_EVEN1" C ON A."Code" = C."Code"
	WHERE B."DocEntry" = :DocEntry
	AND CURRENT_DATE BETWEEN C."U_FROMDT" AND C."U_TODT"
	AND COALESCE(C."U_FINISHED", 'N') != 'Y';
	
	-- CARDCODE에 성공적으로 불러왔다면 이벤트 관리에
	-- 등록된 업체이며, 이벤트 날짜에 속하며,
	-- 종료 여부가 체크되지 않아 진행 중인 이벤트일 때
	IF :CARDCODE IS NOT NULL
	THEN
		SELECT
			A."U_QUANTITY",
			COALESCE(A."U_ADDITEM1", ''),
			COALESCE(A."U_ADDITEM2", ''),
			COALESCE(A."U_ADDITEM3", ''),
			COALESCE(A."U_ADDITEM4", ''),
			COALESCE(A."U_ADDITEM5", ''),
			COALESCE(A."U_CHECKED", 'N')
		INTO BASEQTY, ITEMCODE1, ITEMCODE2, ITEMCODE3, ITEMCODE4, ITEMCODE5, CHECKED
		FROM "@APR_EVEN1" A
		WHERE A."Code" = :CARDCODE
		AND CURRENT_DATE BETWEEN A."U_FROMDT" AND A."U_TODT"
		AND COALESCE(A."U_FINISHED", 'N') != 'Y';
		
		CREATE LOCAL TEMPORARY TABLE #ADDITEM
		(
			SEQ	INT, -- 순번
			LINEID	INT, -- 맨 처음 LineId
			ORDERNO	NVARCHAR(20), -- 주문번호
			QTY	INT -- 주문품 개수 합
		);
		
		INSERT INTO #ADDITEM	
		SELECT
			ROW_NUMBER() OVER (ORDER BY MIN(B."LineId")),
			MIN(B."LineId"),
			B."U_ORDERNO",
			SUM(B."U_QUANTITY")
		FROM "@APR_SHOPM2" B
		WHERE B."DocEntry" = :DocEntry
		GROUP BY B."U_ORDERNO";
		
		SELECT MAX(SEQ) INTO CNT FROM #ADDITEM;
		
		WHILE i <= CNT DO
			SELECT QTY, ORDERNO, LINEID INTO TEMP, ORDRNO, LINE_ID FROM #ADDITEM WHERE SEQ = :i;

			IF TEMP >= BASEQTY -- 12개 이상일 때
			THEN				
				UPDATE "@APR_SHOPM2" A
				SET	A."U_ITEMCODE2" = :ITEMCODE1
				WHERE A."DocEntry" = :DocEntry
				AND A."U_ORDERNO" = :ORDRNO
				AND A."LineId" = :LINE_ID;
				UPDATE "@APR_SHOPM2" A
				SET	A."U_ITEMCODE2" = :ITEMCODE2
				WHERE A."DocEntry" = :DocEntry
				AND A."U_ORDERNO" = :ORDRNO
				AND A."LineId" = (:LINE_ID + 1);
				IF CHECKED = 'Y'
				THEN
					IF TEMP >= (BASEQTY * 2)
					THEN
						UPDATE "@APR_SHOPM2" A
						SET	A."U_ITEMCODE2" = :ITEMCODE3
						WHERE A."DocEntry" = :DocEntry
						AND A."U_ORDERNO" = :ORDRNO
						AND A."LineId" = (:LINE_ID + 2);
						UPDATE "@APR_SHOPM2" A
						SET	A."U_ITEMCODE2" = :ITEMCODE4
						WHERE A."DocEntry" = :DocEntry
						AND A."U_ORDERNO" = :ORDRNO
						AND A."LineId" = (:LINE_ID + 3);
						UPDATE "@APR_SHOPM2" A
						SET	A."U_ITEMCODE2" = :ITEMCODE5
						WHERE A."DocEntry" = :DocEntry
						AND A."U_ORDERNO" = :ORDRNO
						AND A."LineId" = (:LINE_ID + 4);
					END IF;
				END IF;
			END IF;
			i := i + 1;
		END WHILE;
		DROP TABLE #ADDITEM;
	END IF;
END;