DROP PROCEDURE APR_FAM0930_2;
CREATE PROCEDURE APR_FAM0930_2
(
	IN FR_DT	NVARCHAR(10),
	IN TO_DT	NVARCHAR(10),
	IN FR_CODE	NVARCHAR(15),
	IN TO_CODE	NVARCHAR(15)
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
AS
BEGIN
	CREATE LOCAL TEMPORARY TABLE #TMPJDT (
		DT LONGDATE,
		ROWNO INT,
		BASEREF NVARCHAR(11),
		MEMO NVARCHAR(50),
		DEBIT DECIMAL(28,6),
		CREDIT DECIMAL(28,6),
		BALANCE  DECIMAL(28,6)
	);
	
	INSERT INTO #TMPJDT (
		DT, ROWNO, BASEREF, MEMO, DEBIT, CREDIT, BALANCE
	)
	SELECT
		'' AS DT,
		0 AS ROWNO,
		-1 AS BASEREF,
		'이월' AS MEMO,
		0 AS DEBIT,
		0 AS CREDIT,
		SUM(
			CASE WHEN TO_NVARCHAR(A."RefDate", 'YYYYMMDD') < :FR_DT THEN
				COALESCE(B."Debit", 0) - COALESCE(B."Credit", 0)
			ELSE 0 END
		) AS BALANCE
	FROM OJDT A
	INNER JOIN JDT1 B ON A."TransId" = B."TransId"
	WHERE (B."ShortName" >= :FR_CODE or :FR_CODE = '')
	AND (B."ShortName" <= :TO_CODE OR :TO_CODE = '')
	AND B."RefDate" < :FR_DT
	
	UNION ALL
	
	SELECT
		A."RefDate" AS DT,
		-- rank() over (order by a."RefDate", a."TransId", b."Line_ID"),
		RANK() OVER (ORDER BY A."RefDate", A."TransId", B."Line_ID") AS ROWNO,
		A."TransId" AS BASEREF,
		B."LineMemo" AS MEMO,
		B."Debit" AS DEBIT,
		B."Credit" AS CREDIT,
		0 AS BALANCE
	FROM OJDT A
	INNER JOIN JDT1 B ON A."TransId" = B."TransId"
	INNER JOIN OINV C ON A."BaseRef" = C."DocNum"
	WHERE (B."ShortName" >= :FR_CODE or :FR_CODE = '')
	AND (B."ShortName" <= :TO_CODE OR :TO_CODE = '')
	AND B."RefDate" >= :FR_DT
	AND B."RefDate" <= :TO_DT;
	
	SELECT
		A.DT,
		A.BASEREF,
		A.MEMO,
		A.DEBIT,
		A.CREDIT,
		(
			SELECT
				SUM(X.BALANCE + X.DEBIT - X.CREDIT)
			FROM #TMPJDT X
			WHERE X.ROWNO <= A.ROWNO
		) AS BALANCE
	FROM #TMPJDT A
	;
	
	DROP TABLE #TMPJDT;
END;
CALL APR_FAM0930_2('20190101', '20190131', 'C00003', 'C00003');